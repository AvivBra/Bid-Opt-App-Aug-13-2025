# תוכנית פיתוח מוקאפ - Bid Optimizer

## מטרה
פיתוח מוקאפ פונקציונלי מלא של אפליקציית Bid Optimizer בשלושה שלבים (Upload, Validate, Output).
המוקאפ כולל את כל ה-UI והזרימה המלאה, אך ללא חישובי אופטימיזציה אמיתיים.

**חשוב**: זהו מוקאפ פונקציונלי מלא, לא דמו ויזואלי. האפליקציה צריכה לעבוד באמת - לקרוא קבצים, לנהל Virtual Map, וליצור קבצי output (זהים למקור במוקאפ).

## סטטוס נוכחי
האפליקציה נמצאת באמצע Phase 2 (תשתית וקבצי בסיס).

## עץ הפרויקט המלא

```
project/
├── .streamlit/
│   └── config.toml
│
├── app/
│   ├── main.py
│   ├── state/
│   │   └── session.py                    # 🔄 דורש הוספת מונה איטרציות
│   └── ui/
│       ├── layout.py
│       ├── messages.py
│       ├── style.py
│       ├── widgets.py
│       └── tabs/
│           ├── upload_tab.py
│           ├── validate_tab.py           # 🔄 דורש הפרדת לוגיקה מ-UI
│           └── output_tab.py
│
├── config/
│   ├── constants.py
│   ├── settings.py
│   └── ui_text.py
│
├── core/
│   ├── errors/
│   │   └── messages.yaml                # קיים - קובץ הודעות שגיאה
│   ├── io/
│   │   ├── readers.py
│   │   └── writers.py
│   ├── mapping/
│   │   └── virtual_map.py
│   ├── output/
│   │   └── files_builder.py             # כולל גם יצירת שמות קבצים
│   └── validate/
│       ├── bulk_cleanse.py
│       ├── portfolio_comparison.py       # ➕ חדש - ריק, דורש מימוש
│       ├── completion_validator.py       # ➕ חדש - ריק, דורש מימוש
│       └── titles.py
│
├── models/
│   ├── file_schemas.py
│   ├── portfolio.py
│   ├── state.py
│   └── step2_models.py                   # ➕ חדש - ריק, דורש מימוש
│
├── optimizers/
│   ├── base.py
│   └── zero_sales/
│       ├── optimizer.py
│       └── processors/
│           ├── data_cleaner.py
│           └── sheet_creator.py
│
├── services/
│   ├── portfolio_service.py
│   └── step2_service.py                  # ➕ חדש - ריק, דורש מימוש (כולל ניהול Virtual Map)
│
├── utils/
│   ├── debug_manager.py
│   ├── file_utils.py
│   └── format_utils.py
│
├── PRD/                                  # תיקיית איפיון
├── tests/
│   └── fixtures/                         # ➕ להוסיף בהמשך
│       ├── valid/                        # קבצי בדיקה תקינים
│       ├── invalid/                      # קבצי בדיקה שגויים
│       └── edge_cases/                   # מקרי קצה
├── .gitignore
├── README.md
└── requirements.txt

## קבצים למחיקה:
❌ app/pages/ (תיקייה ריקה)
❌ services/file_io/ (כפילות עם core/io)
❌ services/virtual_map_service.py (יועבר ל-step2_service)
❌ utils/session_manager.py (כפילות עם app/state/session)
❌ core/output/filenames.py (יועבר ל-files_builder)
```

---

## Phase 1: מבנה פרויקט בסיסי ✅ הושלם 100%

### מה בוצע:
- ✅ מבנה תיקיות מלא
- ✅ קובץ `app/main.py` - נקודת כניסה ראשית
- ✅ שלושה טאבים: Upload, Validate, Output
- ✅ קבצי `__init__.py` בכל התיקיות
- ✅ קובץ `requirements.txt`
- ✅ תצורת Streamlit (`.streamlit/config.toml`)
- ✅ קבצי דוגמה: `Empty Template Example.xlsx`, `Bulk File Example.xlsx`

---

## Phase 2: תשתית וקבצי בסיס ✅ הושלם 90%

### מה בוצע:
- ✅ `config/settings.py` - הגדרות אפליקציה
- ✅ `config/constants.py` - קבועים (גדלי קבצים, עמודות נדרשות)
- ✅ `config/ui_text.py` - כל הטקסטים של ה-UI
- ✅ `app/state/session.py` - ניהול Session State (דורש עדכון קל)
- ✅ `app/ui/layout.py` - תצורת עמוד ופריסה (כולל CSS מותאם)
- ✅ `app/ui/widgets.py` - רכיבי UI לשימוש חוזר
- ✅ `app/ui/messages.py` - הודעות שגיאה/הצלחה/אזהרה (כולל pink notice)
- ✅ `app/ui/style.py` - עיצוב מלא (כפתורים אדומים, ללא אימוג'י, פריסה 1:6:1)

### מה חסר:
- ❌ `core/io/readers.py` - קריאת קבצי Excel/CSV
- ❌ `core/io/writers.py` - כתיבת קבצי Excel
- ❌ `core/validate/bulk_cleanse.py` - ניקוי ראשוני
- ❌ `core/mapping/virtual_map.py` - ניהול Virtual Map

---

## Phase 3: מימוש טאבים 🔄 הושלם 75-80%

### Upload Tab - ✅ הושלם 100%
- ✅ `app/ui/tabs/upload_tab.py` - מומש במלואו
- ✅ הורדת template ריק
- ✅ העלאת Template ו-Bulk
- ✅ בחירת Zero Sales
- ✅ הודעות סטטוס
- ✅ ולידציות ויזואליות

### Validate Tab - 🔄 דורש שכתוב
- ✅ `app/ui/tabs/validate_tab.py` - UI קיים אבל דורש הפרדת לוגיקה
- ✅ **Mockup Scenario Selector** - חובה להשאיר! 
- ❌ **חסר**: הפרדת לוגיקה עסקית מ-UI
- ❌ **חסר**: מנגנון ספירת איטרציות

### Output Tab - ✅ הושלם 75%
- ✅ `app/ui/tabs/output_tab.py` - UI מלא ופונקציונלי
- ✅ אנימציית עיבוד עם Progress Bar
- ✅ כפתורי הורדה (Working File, Clean File)
- ✅ Pink Notice לשגיאות חישוב
- ✅ הודעות Info על bids מחוץ לטווח
- ✅ סטטיסטיקות מוקאפ
- ✅ כפתור New Processing
- ❌ **חסר**: יצירת קבצי output אמיתיים
- ❌ **חסר**: שמות קבצים עם תאריך ושעה דינמיים

---

## Phase 4: לוגיקה בסיסית למוקאפ 🔄 התחיל 10% - **עדיפות עליונה**

### מה בוצע:
- ✅ `core/validate/portfolios.py` - **נמחק** 
- ✅ `core/validate/portfolio_comparison.py` - **נוצר ריק**
- ✅ `core/validate/completion_validator.py` - **נוצר ריק**
- ✅ `services/step2_service.py` - **נוצר ריק**
- ✅ `models/step2_models.py` - **נוצר ריק**

### מה צריך לממש בדחיפות:

#### 🔴 קבצים ריקים קריטיים (יום 1):
1. **`services/step2_service.py`** - **הכי קריטי!** צריך לממש:
   - ניהול כל התהליך של Step 2
   - ניהול Virtual Map
   - מונה איטרציות (MAX=10)
   - תזמור בין כל הפעולות

2. **`core/validate/portfolio_comparison.py`** - צריך לממש:
   - פונקציית `compare_portfolios(bulk_df, virtual_map)`
   - פונקציית `get_missing_portfolios()`
   - פונקציית `get_excess_portfolios()`
   - **הערה**: מחליף את הקובץ הישן portfolios.py

3. **`core/validate/completion_validator.py`** - צריך לממש:
   - ולידציה של completion template
   - בדיקת ערכי Base Bid
   - בדיקה שפורטפוליו קיים בבאלק

4. **`models/step2_models.py`** - צריך לממש:
   - ComparisonResult dataclass
   - ValidationError dataclass
   - Step2State dataclass

#### 🟡 תיקונים דחופים (יום 2):
5. **`app/state/session.py`** - להוסיף:
   - `completion_iteration_count: int = 0`
   - `MAX_ITERATIONS = 10`

6. **`app/ui/tabs/validate_tab.py`** - שכתוב:
   - להעביר כל הלוגיקה ל-`services/step2_service.py`
   - להשאיר רק קריאות לסרוויס ותצוגת UI

#### ✅ קבצים קיימים לבדיקה:
7. **`core/io/readers.py` ו-`writers.py`** - לבדוק אם עובדים
8. **`core/mapping/virtual_map.py`** - לבדוק אם מלא ועובד
9. **`core/validate/bulk_cleanse.py`** - לבדוק אם עובד
10. **`core/output/files_builder.py`** - להוסיף פונקציות מ-filenames.py שנמחק

#### 6. יצירת קבצי Output
- `core/output/files_builder.py` - יצירת Working/Clean Files (קיים, צריך לבדוק)
- `core/output/filenames.py` - שמות קבצים דינמיים (קיים, צריך לבדוק)

---

## Phase 5: אינטגרציה וחיבור ⏳ טרם החל

### מה צריך לעשות:

1. **חיבור Step 1 (Upload) ללוגיקה**:
   - ולידציה אמיתית של headers
   - בדיקת גודל קובץ (40MB)
   - בדיקת קיום sheet "Sponsored Products Campaigns"

2. **שכתוב Step 2 (Validate)**:
   - **לשמור את Mockup Scenario Selector!**
   - העברת כל הלוגיקה ל-`services/step2_service.py`
   - השארת רק UI ב-`validate_tab.py`
   - הוספת מונה איטרציות ב-`session.py`

3. **חיבור Step 3 (Output) ללוגיקה**:
   - יצירת קבצים אמיתיים (זהים למקור)
   - שמות קבצים דינמיים
   - Operation = "Update" בכל השורות

---

## Phase 6: בדיקות וליטוש ⏳ טרם החל

### בדיקות נדרשות:
- [ ] העלאת קובץ 40MB
- [ ] העלאת קובץ עם headers שגויים
- [ ] לולאת Completion (3 איטרציות)
- [ ] מגבלת 10 איטרציות
- [ ] תרחיש missing בלבד
- [ ] תרחיש excess בלבד
- [ ] תרחיש missing + excess
- [ ] כפתור Reset (New Processing)
- [ ] מעבר חלק בין טאבים
- [ ] **בדיקה עם Mockup Scenario Selector**

### ניקיון קוד:
- [ ] **לא להסיר את Mockup Scenario Selector** - זה נשאר!
- [ ] הסרת debug prints (אם יש)
- [ ] הסרת TODO comments
- [ ] וידוא שכל הטקסטים באנגלית
- [ ] וידוא שאין אימוג'י או אייקונים

---

## סדר עדיפויות מעודכן להמשך פיתוח

### סדר ביצוע מומלץ - 3 ימים

#### יום 1 - הקבצים הקריטיים:
1. **בוקר**: `services/step2_service.py` - המנוע המרכזי
2. **צהריים**: 3 הקבצים הריקים:
   - `core/validate/portfolio_comparison.py`
   - `core/validate/completion_validator.py`
   - `models/step2_models.py`

#### יום 2 - תיקונים ושכתובים:
3. **בוקר**: `app/state/session.py` - הוספת מונה איטרציות
4. **צהריים**: `app/ui/tabs/validate_tab.py` - הפרדת לוגיקה

#### יום 3 - אינטגרציה ובדיקות:
5. **בוקר**: בדיקת קבצים קיימים וחיבורים
6. **צהריים**: בדיקות אינטגרציה מלאות

### פקודות למחיקת כפילויות (אם עדיין קיימות):
```bash
rm -rf app/pages
rm -rf services/file_io
rm services/virtual_map_service.py
rm utils/session_manager.py
rm core/output/filenames.py
```

---

## הערות קריטיות

1. **זהו מוקאפ פונקציונלי, לא דמו** - הכל צריך לעבוד באמת
2. **Mockup Scenario Selector נשאר** - זה פיצ'ר חשוב לבדיקות
3. **Virtual Map הוא קריטי** - זה המנגנון המרכזי
4. **מגבלת 10 איטרציות** - דרישה מהאיפיון
5. **הסטיילינג קיים ומלא** - כפתורים אדומים, ללא אימוג'י, פריסה מדויקת
6. **יש קבצי דוגמה** - להשתמש בהם לבדיקות

---

## Timeline משוער

| Phase | זמן משוער | סטטוס | הערות |
|-------|----------|--------|--------|
| Phase 1 | הושלם | ✅ 100% | מבנה מלא |
| Phase 2 | הושלם | ✅ 90% | רק לוגיקת core חסרה |
| Phase 3 | הושלם | ✅ 75-80% | UI מלא, לוגיקה דורשת הפרדה |
| Phase 4 | 2 ימים | 🔄 10% | **עדיפות עליונה** - קבצים נוצרו |
| Phase 5 | 1 יום | ⏳ 0% | אינטגרציה |
| Phase 6 | 1 יום | ⏳ 0% | בדיקות |

**סה"כ זמן נותר: 4-5 ימים**

---

*מסמך זה מחליף את `PRD/development_plan.md` הקיים*